// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackingFolder.API.AppContext;

#nullable disable

namespace TrackingFolder.API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("goldexpertapi")
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrackingFolder.API.Models.CsvColumnHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GExSerial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("CsvColumnHeader", "goldexpertapi");

                    b.HasData(
                        new
                        {
                            Id = new Guid("941ee3fe-0cba-4f02-a2b1-2079c01c06cb"),
                            GExSerial = "Default",
                            HeaderName = "Date"
                        },
                        new
                        {
                            Id = new Guid("71ff512e-8e3f-409a-99c2-ccf429293637"),
                            GExSerial = "Default",
                            HeaderName = "Time"
                        },
                        new
                        {
                            Id = new Guid("f018a2af-0a69-47f0-9e92-c436134879e7"),
                            GExSerial = "Default",
                            HeaderName = "Reading"
                        },
                        new
                        {
                            Id = new Guid("b954fa2f-fc04-4b53-a2ca-a918188061cd"),
                            GExSerial = "Default",
                            HeaderName = "Elapsed Time Total"
                        },
                        new
                        {
                            Id = new Guid("b6a40669-8b0f-4413-b1d7-90ec4ba568ef"),
                            GExSerial = "Default",
                            HeaderName = "Ni"
                        },
                        new
                        {
                            Id = new Guid("41789a29-a452-4223-b2f3-f57849387fec"),
                            GExSerial = "Default",
                            HeaderName = "Ni +/-"
                        },
                        new
                        {
                            Id = new Guid("5d5e6fcd-24d6-4d1d-b5dd-4d9915f39488"),
                            GExSerial = "Default",
                            HeaderName = "Cu"
                        },
                        new
                        {
                            Id = new Guid("39a14162-e576-40e5-9aee-a3c142a4cfc0"),
                            GExSerial = "Default",
                            HeaderName = "Cu +/-"
                        },
                        new
                        {
                            Id = new Guid("155a6475-d96f-487e-aac5-46f592f700e3"),
                            GExSerial = "Default",
                            HeaderName = "Zn"
                        },
                        new
                        {
                            Id = new Guid("bd1814f6-a010-4420-8076-4e27cbe342b4"),
                            GExSerial = "Default",
                            HeaderName = "Zn +/-"
                        },
                        new
                        {
                            Id = new Guid("0b1192d9-d8b6-47bd-b90e-98412d59cbd4"),
                            GExSerial = "Default",
                            HeaderName = "Ag"
                        },
                        new
                        {
                            Id = new Guid("317d16e4-9363-4343-a468-d723bdedc95c"),
                            GExSerial = "Default",
                            HeaderName = "Ag +/-"
                        },
                        new
                        {
                            Id = new Guid("8797ddf9-d286-4310-b14b-cd4cfc27e725"),
                            GExSerial = "Default",
                            HeaderName = "Au"
                        },
                        new
                        {
                            Id = new Guid("94f035c9-f2c8-475f-af72-0423c727a4ec"),
                            GExSerial = "Default",
                            HeaderName = "Au +/-"
                        },
                        new
                        {
                            Id = new Guid("34847e7b-4732-42db-9a09-7b84268e1eec"),
                            GExSerial = "Default",
                            HeaderName = "Pass/Fail"
                        },
                        new
                        {
                            Id = new Guid("3f6ce19f-07f8-47fe-891b-85bb29670d9c"),
                            GExSerial = "Default",
                            HeaderName = "Live Time Total"
                        });
                });

            modelBuilder.Entity("TrackingFolder.API.Models.GExMeasureResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Ag")
                        .HasColumnType("float");

                    b.Property<double>("AgPlusMinus")
                        .HasColumnType("float");

                    b.Property<double>("Au")
                        .HasColumnType("float");

                    b.Property<double>("AuPlusMinus")
                        .HasColumnType("float");

                    b.Property<double>("Cu")
                        .HasColumnType("float");

                    b.Property<double>("CuPlusMinus")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedOn")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("ElapsedTimeTotal")
                        .HasColumnType("time");

                    b.Property<Guid>("GExMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GoldExpertMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("LiveTimeTotal")
                        .HasColumnType("time");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedOn")
                        .HasColumnType("bigint");

                    b.Property<double>("Ni")
                        .HasColumnType("float");

                    b.Property<double>("NiPlusMinus")
                        .HasColumnType("float");

                    b.Property<bool>("PassFail")
                        .HasColumnType("bit");

                    b.Property<double>("Reading")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<double>("Zn")
                        .HasColumnType("float");

                    b.Property<double>("ZnPlusMinus")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GoldExpertMachineId");

                    b.ToTable("GExMeasureResult", "goldexpertapi");
                });

            modelBuilder.Entity("TrackingFolder.API.Models.GoldExpertMachine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedOn")
                        .HasColumnType("bigint");

                    b.Property<string>("FolderPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedOn")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GoldExpertMachines", "goldexpertapi");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59fba43a-08e4-4839-96ad-a96c5f7f47ee"),
                            FolderPath = "/path/to/machine1",
                            IsDeleted = false,
                            Model = "ModelX",
                            ModifiedBy = "system",
                            ModifiedOn = 1755619410L,
                            Name = "Gold Expert Machine 1",
                            SerialNumber = "SN123456",
                            Version = "1.0"
                        },
                        new
                        {
                            Id = new Guid("fb3e6f4a-38e9-4678-a9e7-7aeb569d8398"),
                            FolderPath = "/path/to/machine2",
                            IsDeleted = false,
                            Model = "ModelY",
                            ModifiedBy = "system",
                            ModifiedOn = 1755619410L,
                            Name = "Gold Expert Machine 2",
                            SerialNumber = "SN654321",
                            Version = "1.0"
                        });
                });

            modelBuilder.Entity("TrackingFolder.API.Models.GExMeasureResult", b =>
                {
                    b.HasOne("TrackingFolder.API.Models.GoldExpertMachine", null)
                        .WithMany("GXMeasureResults")
                        .HasForeignKey("GoldExpertMachineId");
                });

            modelBuilder.Entity("TrackingFolder.API.Models.GoldExpertMachine", b =>
                {
                    b.Navigation("GXMeasureResults");
                });
#pragma warning restore 612, 618
        }
    }
}
